<%
  @page_title, logo = if @flavor == PostgresResource::Flavor::PARADEDB
    ["Create ParadeDB PostgreSQL Database", "logo-paradedb.png"]
  elsif @flavor == PostgresResource::Flavor::LANTERN
    ["Create Lantern PostgreSQL Database", "logo-lantern.png"]
  else
    ["Create PostgreSQL Database", nil]
  end
%>

<%== render("components/billing_warning") %>

<div class="space-y-1 sticky -mx-10 mb-0.5 px-10 top-[3rem] bg-gray-50 z-30">
  <%== render(
    "components/breadcrumb",
    locals: {
      back: "#{@project_data[:path]}/postgres",
      parts: [
        %w[Projects /project],
        [@project_data[:name], @project_data[:path]],
        ["PostgreSQL Databases", "#{@project_data[:path]}/postgres"],
        %w[Create #]
      ]
    }
  ) %>

  <%== render(
    "components/page_header",
    locals: {
      title:  @page_title,
      right_items: [logo ? "<img src=\"/#{logo}\" class=\"h-6 object-contain\"/>" : nil]
    }
  ) %>
</div>

<%
  form_elements = [
    {name: "name", type: "text", label: "Name", required: true, placeholder: "Enter name"},
    {name: "flavor", type: "hidden", value: @flavor},
    {name: "location", type: "radio_small_cards", label: "Location", required: true, content_generator: ContentGenerator::Postgres.method(:location)},
    {name: "size", type: "radio_small_cards", label: "Server size (Dedicated CPU)", required: true, content_generator: ContentGenerator::Postgres.method(:size)},
    {name: "storage_size", type: "radio_small_cards", label: "Storage size", required: true, content_generator: ContentGenerator::Postgres.method(:storage_size)},
    {name: "version", type: "radio_small_cards", label: "Version", required: true, content_generator: ContentGenerator::Postgres.method(:version)},
    {name: "ha_type", type: "radio_small_cards", label: "High Availability", required: true, content_generator: ContentGenerator::Postgres.method(:ha_type)},
  ]

  if [PostgresResource::Flavor::PARADEDB, PostgresResource::Flavor::LANTERN].include?(@flavor)
    form_elements << {name: "partnership_notice", type: "partnership_notice", label: "Partnership Notice", required: true, content_generator: ContentGenerator::Postgres.method(:partnership_notice)}
  end

  option_tree, option_parents = Project[@project_data[:id]].generate_postgres_options(flavor: @flavor)
  action = "#{@project_data[:path]}/postgres"
%>

<%==render("components/form/resource_creation_form", locals: {action:, form_elements:, option_tree:, option_parents:})%>
